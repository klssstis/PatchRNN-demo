From 608fd198def5390c3490bfe903730207dfd8eeb4 Mon Sep 17 00:00:00 2001
From: David Rowley <drowley@postgresql.org>
Date: Mon, 9 Oct 2023 17:25:16 +1300
Subject: [PATCH] Optimize various aggregate deserialization functions

The serialized representation of an internal aggregate state is a bytea
value.  In each deserial function, in order to "receive" the bytea value
we appended it onto a short-lived StringInfoData using
appendBinaryStringInfo.  This was a little wasteful as it meant having to
palloc memory, copy a (possibly long) series of bytes then later pfree
that memory.  Instead of going to this extra trouble, we can just fake up
a StringInfoData and point the data directly at the bytea's payload.  This
should help increase the performance of internal aggregate
deserialization.

Reviewed-by: Michael Paquier
Discussion: https://postgr.es/m/CAApHDvr=e-YOigriSHHm324a40HPqcUhSp6pWWgjz5WwegR=cQ@mail.gmail.com
---
 src/backend/utils/adt/array_userfuncs.c | 24 ++++++-------
 src/backend/utils/adt/numeric.c         | 48 ++++++++++++-------------
 src/backend/utils/adt/varlena.c         | 12 +++----
 3 files changed, 42 insertions(+), 42 deletions(-)

diff --git a/src/backend/utils/adt/array_userfuncs.c b/src/backend/utils/adt/array_userfuncs.c
index 5c4fdcfba469..7f87df45df65 100644
--- a/src/backend/utils/adt/array_userfuncs.c
+++ b/src/backend/utils/adt/array_userfuncs.c
@@ -723,12 +723,13 @@ array_agg_deserialize(PG_FUNCTION_ARGS)
 	sstate = PG_GETARG_BYTEA_PP(0);
 
 	/*
-	 * Copy the bytea into a StringInfo so that we can "receive" it using the
-	 * standard recv-function infrastructure.
+	 * Fake up a StringInfo pointing to the bytea's value so we can "receive"
+	 * the serialized aggregate state value.
 	 */
-	initStringInfo(&buf);
-	appendBinaryStringInfo(&buf,
-						   VARDATA_ANY(sstate), VARSIZE_ANY_EXHDR(sstate));
+	buf.data = VARDATA_ANY(sstate);
+	buf.len = VARSIZE_ANY_EXHDR(sstate);
+	buf.maxlen = 0;
+	buf.cursor = 0;
 
 	/* element_type */
 	element_type = pq_getmsgint(&buf, 4);
@@ -825,7 +826,6 @@ array_agg_deserialize(PG_FUNCTION_ARGS)
 	}
 
 	pq_getmsgend(&buf);
-	pfree(buf.data);
 
 	PG_RETURN_POINTER(result);
 }
@@ -1134,12 +1134,13 @@ array_agg_array_deserialize(PG_FUNCTION_ARGS)
 	sstate = PG_GETARG_BYTEA_PP(0);
 
 	/*
-	 * Copy the bytea into a StringInfo so that we can "receive" it using the
-	 * standard recv-function infrastructure.
+	 * Fake up a StringInfo pointing to the bytea's value so we can "receive"
+	 * the serialized aggregate state value.
 	 */
-	initStringInfo(&buf);
-	appendBinaryStringInfo(&buf,
-						   VARDATA_ANY(sstate), VARSIZE_ANY_EXHDR(sstate));
+	buf.data = VARDATA_ANY(sstate);
+	buf.len = VARSIZE_ANY_EXHDR(sstate);
+	buf.maxlen = 0;
+	buf.cursor = 0;
 
 	/* element_type */
 	element_type = pq_getmsgint(&buf, 4);
@@ -1197,7 +1198,6 @@ array_agg_array_deserialize(PG_FUNCTION_ARGS)
 	memcpy(result->lbs, temp, sizeof(result->lbs));
 
 	pq_getmsgend(&buf);
-	pfree(buf.data);
 
 	PG_RETURN_POINTER(result);
 }
diff --git a/src/backend/utils/adt/numeric.c b/src/backend/utils/adt/numeric.c
index 3c3184f15b56..f4b885005fca 100644
--- a/src/backend/utils/adt/numeric.c
+++ b/src/backend/utils/adt/numeric.c
@@ -5190,12 +5190,13 @@ numeric_avg_deserialize(PG_FUNCTION_ARGS)
 	init_var(&tmp_var);
 
 	/*
-	 * Copy the bytea into a StringInfo so that we can "receive" it using the
-	 * standard recv-function infrastructure.
+	 * Fake up a StringInfo pointing to the bytea's value so we can "receive"
+	 * the serialized aggregate state value.
 	 */
-	initStringInfo(&buf);
-	appendBinaryStringInfo(&buf,
-						   VARDATA_ANY(sstate), VARSIZE_ANY_EXHDR(sstate));
+	buf.data = VARDATA_ANY(sstate);
+	buf.len = VARSIZE_ANY_EXHDR(sstate);
+	buf.maxlen = 0;
+	buf.cursor = 0;
 
 	result = makeNumericAggStateCurrentContext(false);
 
@@ -5222,7 +5223,6 @@ numeric_avg_deserialize(PG_FUNCTION_ARGS)
 	result->nInfcount = pq_getmsgint64(&buf);
 
 	pq_getmsgend(&buf);
-	pfree(buf.data);
 
 	free_var(&tmp_var);
 
@@ -5306,12 +5306,13 @@ numeric_deserialize(PG_FUNCTION_ARGS)
 	init_var(&tmp_var);
 
 	/*
-	 * Copy the bytea into a StringInfo so that we can "receive" it using the
-	 * standard recv-function infrastructure.
+	 * Fake up a StringInfo pointing to the bytea's value so we can "receive"
+	 * the serialized aggregate state value.
 	 */
-	initStringInfo(&buf);
-	appendBinaryStringInfo(&buf,
-						   VARDATA_ANY(sstate), VARSIZE_ANY_EXHDR(sstate));
+	buf.data = VARDATA_ANY(sstate);
+	buf.len = VARSIZE_ANY_EXHDR(sstate);
+	buf.maxlen = 0;
+	buf.cursor = 0;
 
 	result = makeNumericAggStateCurrentContext(false);
 
@@ -5342,7 +5343,6 @@ numeric_deserialize(PG_FUNCTION_ARGS)
 	result->nInfcount = pq_getmsgint64(&buf);
 
 	pq_getmsgend(&buf);
-	pfree(buf.data);
 
 	free_var(&tmp_var);
 
@@ -5677,12 +5677,13 @@ numeric_poly_deserialize(PG_FUNCTION_ARGS)
 	init_var(&tmp_var);
 
 	/*
-	 * Copy the bytea into a StringInfo so that we can "receive" it using the
-	 * standard recv-function infrastructure.
+	 * Fake up a StringInfo pointing to the bytea's value so we can "receive"
+	 * the serialized aggregate state value.
 	 */
-	initStringInfo(&buf);
-	appendBinaryStringInfo(&buf,
-						   VARDATA_ANY(sstate), VARSIZE_ANY_EXHDR(sstate));
+	buf.data = VARDATA_ANY(sstate);
+	buf.len = VARSIZE_ANY_EXHDR(sstate);
+	buf.maxlen = 0;
+	buf.cursor = 0;
 
 	result = makePolyNumAggStateCurrentContext(false);
 
@@ -5706,7 +5707,6 @@ numeric_poly_deserialize(PG_FUNCTION_ARGS)
 #endif
 
 	pq_getmsgend(&buf);
-	pfree(buf.data);
 
 	free_var(&tmp_var);
 
@@ -5868,12 +5868,13 @@ int8_avg_deserialize(PG_FUNCTION_ARGS)
 	init_var(&tmp_var);
 
 	/*
-	 * Copy the bytea into a StringInfo so that we can "receive" it using the
-	 * standard recv-function infrastructure.
+	 * Fake up a StringInfo pointing to the bytea's value so we can "receive"
+	 * the serialized aggregate state value.
 	 */
-	initStringInfo(&buf);
-	appendBinaryStringInfo(&buf,
-						   VARDATA_ANY(sstate), VARSIZE_ANY_EXHDR(sstate));
+	buf.data = VARDATA_ANY(sstate);
+	buf.len = VARSIZE_ANY_EXHDR(sstate);
+	buf.maxlen = 0;
+	buf.cursor = 0;
 
 	result = makePolyNumAggStateCurrentContext(false);
 
@@ -5889,7 +5890,6 @@ int8_avg_deserialize(PG_FUNCTION_ARGS)
 #endif
 
 	pq_getmsgend(&buf);
-	pfree(buf.data);
 
 	free_var(&tmp_var);
 
diff --git a/src/backend/utils/adt/varlena.c b/src/backend/utils/adt/varlena.c
index 72e1e24fe02c..1aff04fa77d7 100644
--- a/src/backend/utils/adt/varlena.c
+++ b/src/backend/utils/adt/varlena.c
@@ -5289,12 +5289,13 @@ string_agg_deserialize(PG_FUNCTION_ARGS)
 	sstate = PG_GETARG_BYTEA_PP(0);
 
 	/*
-	 * Copy the bytea into a StringInfo so that we can "receive" it using the
-	 * standard recv-function infrastructure.
+	 * Fake up a StringInfo pointing to the bytea's value so we can "receive"
+	 * the serialized aggregate state value.
 	 */
-	initStringInfo(&buf);
-	appendBinaryStringInfo(&buf,
-						   VARDATA_ANY(sstate), VARSIZE_ANY_EXHDR(sstate));
+	buf.data = VARDATA_ANY(sstate);
+	buf.len = VARSIZE_ANY_EXHDR(sstate);
+	buf.maxlen = 0;
+	buf.cursor = 0;
 
 	result = makeStringAggState(fcinfo);
 
@@ -5307,7 +5308,6 @@ string_agg_deserialize(PG_FUNCTION_ARGS)
 	appendBinaryStringInfo(result, data, datalen);
 
 	pq_getmsgend(&buf);
-	pfree(buf.data);
 
 	PG_RETURN_POINTER(result);
 }

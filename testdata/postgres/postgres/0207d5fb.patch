From 0207d5fbebed7eb698a7e5f3adf30fafe95bc4b9 Mon Sep 17 00:00:00 2001
From: Thomas Munro <tmunro@postgresql.org>
Date: Thu, 22 Jul 2021 14:11:17 +1200
Subject: [PATCH] jit: Don't inline functions that access thread-locals.

Code inlined by LLVM can crash or fail with "Relocation type not
implemented yet!" if it tries to access thread local variables.  Don't
inline such code.

Back-patch to 11, where LLVM arrived.  Bug #16696.

Author: Dmitry Marakasov <amdmi3@amdmi3.ru>
Reviewed-by: Andres Freund <andres@anarazel.de>
Discussion: https://postgr.es/m/16696-29d944a33801fbfe@postgresql.org
---
 src/backend/jit/llvm/llvmjit_inline.cpp | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/src/backend/jit/llvm/llvmjit_inline.cpp b/src/backend/jit/llvm/llvmjit_inline.cpp
index ea90fd5b24f4..6f03595db5a4 100644
--- a/src/backend/jit/llvm/llvmjit_inline.cpp
+++ b/src/backend/jit/llvm/llvmjit_inline.cpp
@@ -608,6 +608,17 @@ function_inlinable(llvm::Function &F,
 		if (rv->materialize())
 			elog(FATAL, "failed to materialize metadata");
 
+		/*
+		 * Don't inline functions that access thread local variables.  That
+		 * doesn't work on current LLVM releases (but might in future).
+		 */
+		if (rv->isThreadLocal())
+		{
+			ilog(DEBUG1, "cannot inline %s due to thread-local variable %s",
+				 F.getName().data(), rv->getName().data());
+			return false;
+		}
+
 		/*
 		 * Never want to inline externally visible vars, cheap enough to
 		 * reference.

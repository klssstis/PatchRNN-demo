From 6b74f5eaadc4489e08a23686f99f096ad0e08936 Mon Sep 17 00:00:00 2001
From: Tom Lane <tgl@sss.pgh.pa.us>
Date: Sat, 16 Jun 2018 14:58:11 -0400
Subject: [PATCH] Avoid unnecessary use of strncpy in a couple of places in
 ecpg.

Use of strncpy with a length limit based on the source, rather than
the destination, is non-idiomatic and draws warnings from gcc 8.
Replace with memcpy, which does exactly the same thing in these cases,
but with less chance for confusion.

Backpatch to all supported branches.

Discussion: https://postgr.es/m/21789.1529170195@sss.pgh.pa.us
---
 src/interfaces/ecpg/ecpglib/descriptor.c | 2 +-
 src/interfaces/ecpg/pgtypeslib/common.c  | 6 ++----
 2 files changed, 3 insertions(+), 5 deletions(-)

diff --git a/src/interfaces/ecpg/ecpglib/descriptor.c b/src/interfaces/ecpg/ecpglib/descriptor.c
index f38bf343f0b7..8fdf5606c09c 100644
--- a/src/interfaces/ecpg/ecpglib/descriptor.c
+++ b/src/interfaces/ecpg/ecpglib/descriptor.c
@@ -218,7 +218,7 @@ get_char_item(int lineno, void *var, enum ECPGttype vartype, char *value, int va
 				(struct ECPGgeneric_varchar *) var;
 
 				if (varcharsize == 0)
-					strncpy(variable->arr, value, strlen(value));
+					memcpy(variable->arr, value, strlen(value));
 				else
 					strncpy(variable->arr, value, varcharsize);
 
diff --git a/src/interfaces/ecpg/pgtypeslib/common.c b/src/interfaces/ecpg/pgtypeslib/common.c
index ae29b6c4ab85..2adb6809e201 100644
--- a/src/interfaces/ecpg/pgtypeslib/common.c
+++ b/src/interfaces/ecpg/pgtypeslib/common.c
@@ -42,10 +42,8 @@ pgtypes_fmt_replace(union un_fmt_comb replace_val, int replace_type, char **outp
 			i = strlen(replace_val.str_val);
 			if (i + 1 <= *pstr_len)
 			{
-				/*
-				 * copy over i + 1 bytes, that includes the tailing terminator
-				 */
-				strncpy(*output, replace_val.str_val, i + 1);
+				/* include trailing terminator in what we copy */
+				memcpy(*output, replace_val.str_val, i + 1);
 				*pstr_len -= i;
 				*output += i;
 				if (replace_type == PGTYPES_TYPE_STRING_MALLOCED)

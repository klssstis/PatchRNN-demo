From 9edc97b712e2f0ba041b40b4b2e2285d229f4fb0 Mon Sep 17 00:00:00 2001
From: Tom Lane <tgl@sss.pgh.pa.us>
Date: Sun, 10 Dec 2017 12:44:03 -0500
Subject: [PATCH] Stabilize output of new regression test case.

The test added by commit 390d58135 turns out to have different output
in CLOBBER_CACHE_ALWAYS builds: there's an extra CONTEXT line in the
error message as a result of detecting the error at a different place.
Possibly we should do something to make that more consistent.  But as
a stopgap measure to make the buildfarm green again, adjust the test
to suppress CONTEXT entirely.  We can revert this if we do something
in the backend to eliminate the inconsistency.

Discussion: https://postgr.es/m/31545.1512924904@sss.pgh.pa.us
---
 src/test/regress/expected/plpgsql.out | 4 ++--
 src/test/regress/sql/plpgsql.sql      | 2 ++
 2 files changed, 4 insertions(+), 2 deletions(-)

diff --git a/src/test/regress/expected/plpgsql.out b/src/test/regress/expected/plpgsql.out
index 29f9e86d5608..26f6e4394f47 100644
--- a/src/test/regress/expected/plpgsql.out
+++ b/src/test/regress/expected/plpgsql.out
@@ -5026,6 +5026,7 @@ select scope_test();
 
 drop function scope_test();
 -- Check that variables are reinitialized on block re-entry.
+\set VERBOSITY terse   \\ -- needed for output stability
 do $$
 begin
   for i in 1..3 loop
@@ -5050,8 +5051,7 @@ NOTICE:  r = (1,2)
 NOTICE:  x = <NULL>
 NOTICE:  y = 2
 ERROR:  record "r" is not assigned yet
-DETAIL:  The tuple structure of a not-yet-assigned record is indeterminate.
-CONTEXT:  PL/pgSQL function inline_code_block line 15 at RAISE
+\set VERBOSITY default
 -- Check handling of conflicts between plpgsql vars and table columns.
 set plpgsql.variable_conflict = error;
 create function conflict_test() returns setof int8_tbl as $$
diff --git a/src/test/regress/sql/plpgsql.sql b/src/test/regress/sql/plpgsql.sql
index 07b6fc89716d..bb09b2d80719 100644
--- a/src/test/regress/sql/plpgsql.sql
+++ b/src/test/regress/sql/plpgsql.sql
@@ -4016,6 +4016,7 @@ drop function scope_test();
 
 -- Check that variables are reinitialized on block re-entry.
 
+\set VERBOSITY terse   \\ -- needed for output stability
 do $$
 begin
   for i in 1..3 loop
@@ -4034,6 +4035,7 @@ begin
     end;
   end loop;
 end$$;
+\set VERBOSITY default
 
 -- Check handling of conflicts between plpgsql vars and table columns.
 

From 5f6401f81cb24bd3930e0dc589fc4aa8b5424cdc Mon Sep 17 00:00:00 2001
From: Michael Paquier <michael@paquier.xyz>
Date: Wed, 11 Jan 2023 15:16:38 +0900
Subject: [PATCH] Fix typos in code and comments

Author: Justin Pryzby
Discussion: https://postgr.es/m/20230110045722.GD9837@telsasoft.com
---
 doc/src/sgml/ref/alter_database.sgml                      | 6 +++---
 doc/src/sgml/ref/alter_role.sgml                          | 6 +++---
 doc/src/sgml/ref/psql-ref.sgml                            | 4 ++--
 doc/src/sgml/system-views.sgml                            | 2 +-
 src/backend/access/transam/xlogrecovery.c                 | 2 +-
 src/backend/utils/mmgr/mcxt.c                             | 8 ++++----
 src/bin/psql/common.c                                     | 2 +-
 .../expected/test_pg_db_role_setting.out                  | 2 +-
 .../sql/test_pg_db_role_setting.sql                       | 2 +-
 9 files changed, 17 insertions(+), 17 deletions(-)

diff --git a/doc/src/sgml/ref/alter_database.sgml b/doc/src/sgml/ref/alter_database.sgml
index 181e9d362052..0962f32e134d 100644
--- a/doc/src/sgml/ref/alter_database.sgml
+++ b/doc/src/sgml/ref/alter_database.sgml
@@ -211,9 +211,9 @@ ALTER DATABASE <replaceable class="parameter">name</replaceable> RESET ALL
       <term><literal>USER SET</literal></term>
       <listitem>
        <para>
-        Specifies that variable should be set on behalf of ordinary role.
-        That lets non-superuser and non-replication role to set placeholder
-        variables, with permission requirements is not known yet;
+        Specifies that the variable should be set on behalf of an ordinary role.
+        That allows non-superuser and non-replication roles to set placeholder
+        variables, whose permission requirements are not known yet;
         see <xref linkend="runtime-config-custom"/>. The variable won't
         be set if it appears to require superuser privileges.
        </para>
diff --git a/doc/src/sgml/ref/alter_role.sgml b/doc/src/sgml/ref/alter_role.sgml
index 43067d3feca4..fbb4612e7077 100644
--- a/doc/src/sgml/ref/alter_role.sgml
+++ b/doc/src/sgml/ref/alter_role.sgml
@@ -241,9 +241,9 @@ ALTER ROLE { <replaceable class="parameter">role_specification</replaceable> | A
       <term><literal>USER SET</literal></term>
       <listitem>
        <para>
-        Specifies that variable should be set on behalf of ordinary role.
-        That lets non-superuser and non-replication role to set placeholder
-        variables, with permission requirements is not known yet;
+        Specifies that the variable should be set on behalf of an ordinary role.
+        That allows non-superuser and non-replication roles to set placeholder
+        variables, whose permission requirements are not known yet;
         see <xref linkend="runtime-config-custom"/>. The variable won't
         be set if it appears to require superuser privileges.
        </para>
diff --git a/doc/src/sgml/ref/psql-ref.sgml b/doc/src/sgml/ref/psql-ref.sgml
index 1a117dbecba6..dc6528dc11d1 100644
--- a/doc/src/sgml/ref/psql-ref.sgml
+++ b/doc/src/sgml/ref/psql-ref.sgml
@@ -1901,8 +1901,8 @@ INSERT INTO tbl1 VALUES ($1, $2) \bind 'first value' 'second value' \g
         </para>
 
         <para>
-        Since <productname>PostgreSQL</productname> 16 the output includes
-        column with the values of
+        Since <productname>PostgreSQL</productname> 16, the output includes a
+        column with the values of the
         <link linkend="sql-alterrole-user-set"><literal>USER SET</literal></link>
         flag for each setting.
         </para>
diff --git a/doc/src/sgml/system-views.sgml b/doc/src/sgml/system-views.sgml
index 5b1c73269b94..7c8fc3f654b5 100644
--- a/doc/src/sgml/system-views.sgml
+++ b/doc/src/sgml/system-views.sgml
@@ -1580,7 +1580,7 @@
   </para>
 
   <para>
-   A specualtive insertion lock consists of a transaction ID and a speculative
+   A speculative insertion lock consists of a transaction ID and a speculative
    insertion token. The speculative insertion token is displayed in the
    <structfield>objid</structfield> column.
   </para>
diff --git a/src/backend/access/transam/xlogrecovery.c b/src/backend/access/transam/xlogrecovery.c
index bc3c3eb3e797..5e657853066b 100644
--- a/src/backend/access/transam/xlogrecovery.c
+++ b/src/backend/access/transam/xlogrecovery.c
@@ -2114,7 +2114,7 @@ CheckRecoveryConsistency(void)
 
 		/*
 		 * Check that pg_tblspc doesn't contain any real directories. Replay
-		 * of Database/CREATE_* records may have created ficticious tablespace
+		 * of Database/CREATE_* records may have created fictitious tablespace
 		 * directories that should have been removed by the time consistency
 		 * was reached.
 		 */
diff --git a/src/backend/utils/mmgr/mcxt.c b/src/backend/utils/mmgr/mcxt.c
index 8b6591abfb23..0b00802df70a 100644
--- a/src/backend/utils/mmgr/mcxt.c
+++ b/src/backend/utils/mmgr/mcxt.c
@@ -717,10 +717,10 @@ MemoryContextStatsDetail(MemoryContext context, int max_children,
 		 * to the connected client.
 		 *
 		 * We don't buffer the information about all memory contexts in a
-		 * backend into StringInfo and log it as one message. Otherwise which
-		 * may require the buffer to be enlarged very much and lead to OOM
-		 * error since there can be a large number of memory contexts in a
-		 * backend. Instead, we log one message per memory context.
+		 * backend into StringInfo and log it as one message.  That would
+		 * require the buffer to be enlarged, risking an OOM as there could
+		 * be a large number of memory contexts in a backend.  Instead, we
+		 * log one message per memory context.
 		 */
 		ereport(LOG_SERVER_ONLY,
 				(errhidestmt(true),
diff --git a/src/bin/psql/common.c b/src/bin/psql/common.c
index 38f9b10b7c95..00627830c474 100644
--- a/src/bin/psql/common.c
+++ b/src/bin/psql/common.c
@@ -1447,7 +1447,7 @@ ExecQueryAndProcessResults(const char *query,
 		if (!AcceptResult(result, false))
 		{
 			/*
-			 * Some error occured, either a server-side failure or a failure
+			 * Some error occurred, either a server-side failure or a failure
 			 * to submit the command string.  Record that.
 			 */
 			const char *error = PQresultErrorMessage(result);
diff --git a/src/test/modules/test_pg_db_role_setting/expected/test_pg_db_role_setting.out b/src/test/modules/test_pg_db_role_setting/expected/test_pg_db_role_setting.out
index bee237cf40be..ec18692c5588 100644
--- a/src/test/modules/test_pg_db_role_setting/expected/test_pg_db_role_setting.out
+++ b/src/test/modules/test_pg_db_role_setting/expected/test_pg_db_role_setting.out
@@ -122,7 +122,7 @@ SHOW test_pg_db_role_setting.user_param;
  bbb
 (1 row)
 
--- module is loaded, and placeholder values are succesfully set
+-- module is loaded, and placeholder values are successfully set
 SELECT load_test_pg_db_role_setting();
  load_test_pg_db_role_setting 
 ------------------------------
diff --git a/src/test/modules/test_pg_db_role_setting/sql/test_pg_db_role_setting.sql b/src/test/modules/test_pg_db_role_setting/sql/test_pg_db_role_setting.sql
index c6095dfa98c4..44f231c6b4b1 100644
--- a/src/test/modules/test_pg_db_role_setting/sql/test_pg_db_role_setting.sql
+++ b/src/test/modules/test_pg_db_role_setting/sql/test_pg_db_role_setting.sql
@@ -56,7 +56,7 @@ ALTER ROLE regress_regular_user SET test_pg_db_role_setting.superuser_param = 'c
 SHOW test_pg_db_role_setting.superuser_param;
 SHOW test_pg_db_role_setting.user_param;
 
--- module is loaded, and placeholder values are succesfully set
+-- module is loaded, and placeholder values are successfully set
 SELECT load_test_pg_db_role_setting();
 
 SHOW test_pg_db_role_setting.superuser_param;

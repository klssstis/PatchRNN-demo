From 31bc604e0b74805ff9e84a2d549ca82be665d0a6 Mon Sep 17 00:00:00 2001
From: Andres Freund <andres@anarazel.de>
Date: Wed, 21 Mar 2018 19:44:17 -0700
Subject: [PATCH] Add file containing extensions of the LLVM C API.

Author: Andres Freund
Discussion: https://postgr.es/m/20170901064131.tazjxwus3k2w3ybh@alap3.anarazel.de
---
 src/backend/jit/llvm/Makefile         |  2 +-
 src/backend/jit/llvm/llvmjit_wrap.cpp | 44 +++++++++++++++++++++++++++
 src/include/jit/llvmjit.h             | 17 +++++++++++
 3 files changed, 62 insertions(+), 1 deletion(-)
 create mode 100644 src/backend/jit/llvm/llvmjit_wrap.cpp

diff --git a/src/backend/jit/llvm/Makefile b/src/backend/jit/llvm/Makefile
index 856b94e12b46..4b58a3450f3b 100644
--- a/src/backend/jit/llvm/Makefile
+++ b/src/backend/jit/llvm/Makefile
@@ -37,7 +37,7 @@ override COMPILER = $(CXX) $(CFLAGS)
 OBJS=$(WIN32RES)
 
 # Infrastructure
-OBJS += llvmjit.o llvmjit_error.o
+OBJS += llvmjit.o llvmjit_error.o llvmjit_wrap.o
 # Code generation
 OBJS +=
 
diff --git a/src/backend/jit/llvm/llvmjit_wrap.cpp b/src/backend/jit/llvm/llvmjit_wrap.cpp
new file mode 100644
index 000000000000..5d1a17cde042
--- /dev/null
+++ b/src/backend/jit/llvm/llvmjit_wrap.cpp
@@ -0,0 +1,44 @@
+/*-------------------------------------------------------------------------
+ *
+ * llvmjit_wrap.cpp
+ *	  Parts of the LLVM interface not (yet) exposed to C.
+ *
+ * Copyright (c) 2016-2018, PostgreSQL Global Development Group
+ *
+ * IDENTIFICATION
+ *	  src/backend/lib/llvm/llvmjit_wrap.c
+ *
+ *-------------------------------------------------------------------------
+ */
+
+extern "C"
+{
+#include "postgres.h"
+}
+
+#include <llvm/MC/SubtargetFeature.h>
+#include <llvm/Support/Host.h>
+
+#include "jit/llvmjit.h"
+
+
+/*
+ * C-API extensions.
+ */
+#if defined(HAVE_DECL_LLVMGETHOSTCPUNAME) && !HAVE_DECL_LLVMGETHOSTCPUNAME
+char *LLVMGetHostCPUName(void) {
+	return strdup(llvm::sys::getHostCPUName().data());
+}
+#endif
+
+
+char *LLVMGetHostCPUFeatures(void) {
+	llvm::SubtargetFeatures Features;
+	llvm::StringMap<bool> HostFeatures;
+
+	if (llvm::sys::getHostCPUFeatures(HostFeatures))
+		for (auto &F : HostFeatures)
+			Features.AddFeature(F.first(), F.second);
+
+	return strdup(Features.getString().c_str());
+}
diff --git a/src/include/jit/llvmjit.h b/src/include/jit/llvmjit.h
index 187ebe2c2a02..63b2fdfe5910 100644
--- a/src/include/jit/llvmjit.h
+++ b/src/include/jit/llvmjit.h
@@ -44,6 +44,23 @@ extern void llvm_assert_in_fatal_section(void);
 
 extern LLVMJitContext *llvm_create_context(int jitFlags);
 
+
+/*
+ ****************************************************************************
+ * Extensions / Backward compatibility section of the LLVM C API
+ * Error handling related functions.
+ ****************************************************************************
+ */
+#if defined(HAVE_DECL_LLVMGETHOSTCPUNAME) && !HAVE_DECL_LLVMGETHOSTCPUNAME
+/** Get the host CPU as a string. The result needs to be disposed with
+  LLVMDisposeMessage. */
+extern char *LLVMGetHostCPUName(void);
+#endif
+
+/** Get the host CPU features as a string. The result needs to be disposed
+  with LLVMDisposeMessage. */
+extern char *LLVMGetHostCPUFeatures(void);
+
 #ifdef __cplusplus
 } /* extern "C" */
 #endif
